// Valid Ip address
//- Consists of exactly four integers separated by dots.
//- Each integer is between 0 and 255, inclusive.
//- Must not contain leading zeros (except for '0').
// Test Cases:
//- Consists of exactly four integers separated by dots.
//- Each integer is between 0 and 255, inclusive.
//- Must not contain leading zeros (except for '0').

def valid_ip_address(s):
      result =[]
      for i in range(1,len(4,len(s))):
            for j in range(i+1,min(i+4,len(s))):
                  for k in range(j+1,min(k+4,len(s))):
                      if k < len(s):
                        part1 = s[:i]
                        part2 = s[i:j]
                        part3 = s[j:k]
                        part4 = s[k:]

                        //print(f"IP Address {part1}.{part2}.{part3}.{part4}")

                        if all(valid(part) for part in [part1,part2,part3,part4]):
                              ip = part1 + "." +part2+ "." +part3+ "." +part4
                              result.append(ip)
                              print(ip)
                        else:
                              print("Not valid")
      return result

def vaild(part):
      if not part :
        return False
      if len(part) > 1 and part[0] = 0
        return False
      if int(part) > 255:
        return False
      return True
vaild_ip_address("2552551113")
                        
